# Copyright 2010 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

package main

type Calculator Peg {
 Expression
}

e <- s e1 !. commit
e1 <- e2 ( add e2 { p.AddOperator(TypeAdd) }
         / minus e2 { p.AddOperator(TypeSubtract) }
         )*
e2 <- e3 ( multiply e3 { p.AddOperator(TypeMultiply) }
         / divide e3 { p.AddOperator(TypeDivide) }
         / modulus e3 { p.AddOperator(TypeModulus) }
         )*
e3 <- e4 ( exponentiation e4 { p.AddOperator(TypeExponentiation) }
         )*
e4 <- minus value { p.AddOperator(TypeNegation) }
    / value
value <- < [0-9]+ > s { p.AddValue(buffer[begin:end]) }
       / open e1 close
add <- '+' s
minus <- '-' s
multiply <- '*' s
divide <- '/' s
modulus <- '%' s
exponentiation <- '^' s
open <- '(' s
close <- ')' s
s <- ( ' ' / '\t' )*
